{"version":3,"sources":["components/WithLoader/index.js","components/Header/index.js","components/ActionsBar/index.js","components/Post/index.js","app/App.js","components/PostsList/index.js","index.js"],"names":["WithLoader","WrappedComponent","props","caughtError","className","isLoading","Header","SearchBar","onSubmit","submitRedditSearch","type","name","placeholder","Post","awardIcons","awards","map","award","push","id","count","url","resized_icons","replace","onClick","window","open","permalink","href","author","target","rel","authorFlairText","dateCreated","icon","src","alt","linkFlair","style","backgroundColor","linkFlairBackground","color","linkFlairColor","title","imageSrc","upVotes","comments","PostsWithLoader","posts","item","data","post","date","moment","unix","created_utc","format","fromNow","altUrl","endsWith","flairColor","link_flair_text_color","link_flair_text","link_flair_background_color","author_flair_text","all_awardings","preview","images","source","media","numeral","ups","num_comments","App","useState","redditPosts","setRedditPosts","setIsLoading","setCaughtError","getTopPosts","a","fetch","json","response","children","filteredPosts","filter","over_18","useEffect","e","preventDefault","search","elements","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4472bfb8.chunk.js","sourcesContent":["// Styles\nimport './WithLoader.scss'\n\nconst WithLoader = WrappedComponent => props => {\n\tif (props.caughtError) return (\n\t\t<div className='container text-center mt-3 alert alert-danger'>\n\t\t\t<p>We can't find any results.</p>\n\t\t</div>\n\t)\n\tif (!props.isLoading && !props.caughtError) return (<WrappedComponent {...props} />)\n\treturn (\n\t\t<div>\n\t\t\t<div className='p-5'>\n\t\t\t\t<div className='loader'>\n\t\t\t\t\t<span className='animation-ball' />\n\t\t\t\t\t<span className='animation-ball' />\n\t\t\t\t\t<span className='animation-ball' />\n\t\t\t\t</div>\n\t\t\t\t<h6 className='text-center'>Loading...</h6>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default WithLoader","// Styles\nimport './Header.scss'\n\nconst Header = () => {\n  return (\n    <div className='fluid-container'>\n      <div className=\"header text-center py-3 mb-4\">\n        <h1 className='h4'>Reddit React</h1>\n        <h2 className='h6'>Lightweight client for desktop and mobile</h2>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","// Styles\nimport './ActionsBar.scss'\n\nexport default function SearchBar(props) {\n  return (\n    <div className='actions-bar mb-2'>\n      <form onSubmit={props.submitRedditSearch}>\n        <span className='fa fa-search form-control-feedback' />\n        <input type='text' name='search' className='form-control' placeholder='Subreddit Name...' />\n      </form>\n    </div>\n  )\n}","// Styles\nimport './Post.scss'\n\nconst Post = props => {\n  const awardIcons = []\n  props.awards.map(award => awardIcons.push({ id: award.id, name: award.name, count: award.count, url: award.resized_icons[1].url.replace(/amp;/gi, '') }))\n\n  return (\n    <div onClick={() => { window.open(props.permalink, '_blank') }} className='m-3 p-3 post'>\n      <div className='metadata'>\n        <span className='posted'>Posted by</span>\n        <span className='author'><a href={'https://reddit.com/user/' + props.author} target='_blank' rel='noopener noreferrer'>u/{props.author}</a></span>\n        {props.authorFlairText && <span className='flair-text'>{props.authorFlairText}</span>}\n        <span className='date'>{props.dateCreated}</span>\n\n\n\n        {awardIcons.map(icon =>\n          <span key={icon.id}>\n            <span><img className='award-icon' src={icon.url} alt={icon.name} /></span>\n            <span>{icon.count}</span>\n          </span>\n        )}\n      </div>\n      <div className='mt-2 post-title'>\n        {props.linkFlair && <span className='link-flair' style={{ backgroundColor: props.linkFlairBackground, color: props.linkFlairColor }}>{props.linkFlair}</span>}\n        <span className='title'>{props.title}</span>\n      </div>\n      {\n        props.imageSrc === null ?\n          <div className='post-link'>\n            <a href={props.url}>{props.url}</a>\n          </div> :\n          <div className='image text-center'>\n            <img className='p-3' src={props.imageSrc} alt={props.title} />\n          </div>\n      }\n      <div className='info pt-2'>\n        <span><i className='fas fa-arrow-up mr-1' />{props.upVotes}</span>\n        <span><i className='fas fa-comment mr-1' />{props.comments} Comments</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Post","// Libraries\nimport { useState, useEffect } from 'react';\n\n// HOCs\nimport WithLoader from '../components/WithLoader'\n\n// Components\nimport Header from '../components/Header'\nimport ActionsBar from '../components/ActionsBar'\nimport PostsList from '../components/PostsList'\n\nconst PostsWithLoader = WithLoader(PostsList)\n\nconst App = () => {\n  const [redditPosts, setRedditPosts] = useState(null)\n  const [isLoading, setIsLoading] = useState(false)\n  const [caughtError, setCaughtError] = useState(false)\n\n  const getTopPosts = async (name = false) => {\n    try {\n      setIsLoading(true)\n      const url = await fetch(name ? `https://www.reddit.com/r/${name}/top.json?t=today&limit=50` : `https://www.reddit.com/top.json?t=today&limit=50`)\n      const response = await url.json()\n      const posts = response.data.children.map(post => post)\n      const filteredPosts = posts.filter(item => item.data.over_18 === false)\n      setRedditPosts(filteredPosts)\n      setIsLoading(false)\n    } catch (err) {\n      setCaughtError(true)\n    }\n  }\n\n  useEffect(() => {\n    getTopPosts()\n  }, [])\n\n  const submitRedditSearch = (e) => {\n    e.preventDefault()\n    setCaughtError(false)\n    const search = e.target.elements.search.value\n    getTopPosts(search)\n  }\n\n  return (\n    <div>\n      <Header />\n      <ActionsBar submitRedditSearch={submitRedditSearch} />\n      <PostsWithLoader caughtError={caughtError} isLoading={isLoading} posts={redditPosts} />\n    </div>\n  );\n}\n\nexport default App","// Libs\nimport moment from 'moment'\nimport numeral from 'numeral'\n\n// Components\nimport Post from '../Post'\n\n// Styles\nimport './PostLists.scss'\n\nconst PostsList = props => {\n  const posts = props.posts ? props.posts.map(item => item.data) : []\n  return (\n    <div className='post-list'>\n      {\n        posts.map(post => {\n          const date = moment.unix(post.created_utc).format('YYYYMMDD')\n          const dateCreated = moment(`${date}`, 'YYYYMMDD').fromNow()\n          const altUrl = (post.url.endsWith('.jpg') ? post.url : null)\n          const flairColor = post.link_flair_text_color === 'light' ? '#FFFFFF' : '#000000'\n          return (\n            <Post\n              key={post.id}\n              id={post.id}\n              linkFlair={post.link_flair_text}\n              linkFlairBackground={post.link_flair_background_color}\n              linkFlairColor={flairColor}\n              author={post.author}\n              authorFlairText={post.author_flair_text}\n              awards={post.all_awardings}\n              dateCreated={dateCreated}\n              title={post.title.replace(/amp;/gi, '')}\n              imageSrc={post.preview ? post.preview.images[0].source.url.replace(/amp;/gi, '') : altUrl}\n              media={post.media ? post.media : null}\n              permalink={`https://reddit.com${post.permalink}`}\n              upVotes={numeral(post.ups).format('0.0a')}\n              comments={numeral(post.num_comments).format('0.0a')}\n              url={post.url}\n            />\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default PostsList","// Libraries\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Components\nimport App from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('RedditReact')\n);"],"sourceRoot":""}